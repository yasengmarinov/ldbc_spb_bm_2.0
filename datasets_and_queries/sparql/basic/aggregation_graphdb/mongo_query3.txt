PREFIX inst: <http://www.ontotext.com/connectors/mongodb/instance#>
PREFIX : <http://www.ontotext.com/connectors/mongodb#>
PREFIX bbcevent:<http://www.bbc.co.uk/ontologies/event/>
PREFIX geo-pos:<http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX bbc:<http://www.bbc.co.uk/ontologies/bbc/>
PREFIX time:<http://www.w3.org/2006/time#>
PREFIX event:<http://purl.org/NET/c4dm/event.owl#>
PREFIX music-ont:<http://purl.org/ontology/mo/>
PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX foaf:<http://xmlns.com/foaf/0.1/>
PREFIX provenance:<http://www.bbc.co.uk/ontologies/provenance/>
PREFIX owl:<http://www.w3.org/2002/07/owl#>
PREFIX cms:<http://www.bbc.co.uk/ontologies/cms/>
PREFIX news:<http://www.bbc.co.uk/ontologies/news/>
PREFIX cnews:<http://www.bbc.co.uk/ontologies/news/cnews/>
PREFIX cconcepts:<http://www.bbc.co.uk/ontologies/coreconcepts/>
PREFIX dbp-prop:<http://dbpedia.org/property/>
PREFIX geonames:<http://sws.geonames.org/>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
PREFIX domain:<http://www.bbc.co.uk/ontologies/domain/>
PREFIX dbpedia:<http://dbpedia.org/resource/>
PREFIX geo-ont:<http://www.geonames.org/ontology#>
PREFIX bbc-pont:<http://purl.org/ontology/po/>
PREFIX tagging:<http://www.bbc.co.uk/ontologies/tagging/>
PREFIX sport:<http://www.bbc.co.uk/ontologies/sport/>
PREFIX skosCore:<http://www.w3.org/2004/02/skos/core#>
PREFIX dbp-ont:<http://dbpedia.org/ontology/>
PREFIX xsd:<http://www.w3.org/2001/XMLSchema#>
PREFIX core:<http://www.bbc.co.uk/ontologies/coreconcepts/>
PREFIX curric:<http://www.bbc.co.uk/ontologies/curriculum/>
PREFIX skos:<http://www.w3.org/2004/02/skos/core#>
PREFIX cwork:<http://www.bbc.co.uk/ontologies/creativework/>
PREFIX fb:<http://rdf.freebase.com/ns/>
PREFIX ldbcspb:<http://www.ldbcouncil.org/spb#>
#  Query Name : query1
#  Query Description :
#  Retrieve creative works about thing t (or that mention t)
#  reasoning: rdfs:subClassOf, rdf:type
#  join ordering: cwork:dateModified rdf:type owl:FunctionalProperty
#  join ordering: cwork:dateCreated rdf:type  owl:FunctionalProperty
#  Choke Points :
#    - join ordering based on cardinality of functional properties cwork:dateCreated, cwork:dateModified
#      Optimizer should use an efficient cost evaluation method for choosing the optimal join tree
#    - A sub-PREFIX inst: <http://www.ontotext.com/connectors/mongodb/instance#>
# select which aggregates results. Optimizer should recognize it and execute it first
#    - OPTIONAL and nested OPTIONAL clauses (treated by query optimizer as nested sub-queries)
#      Optimizer should decide to put optional triples on top of the join tree
#      (i.e. delay their execution to the last possible moment) because OPTIONALs are treated as a left join
#    - query optimizer has the chance to recognize the triple pattern : ?cWork a ?type . ?type rdfs:subClassOf cwork:CreativeWork
#      and eliminate first triple (?cwork a ?type .) since ?cwork is a cwork:CreativeWork
CONSTRUCT {
    ?work ?p ?o
} where
{
    {
        select (group_concat(?creativeWork;
                separator = '", "') as ?ids) where{
            select distinct ?creativeWork where{
                ?creativeWork cwork:tag {{{cwAboutUri}}} .
		#{{{cwAboutUri}}}
            } limit 10
        }
    }
    values ?template {
        '''[
{
"$match": {
"$and": [
{
"$or": [
{
"@graph.cwork:primaryFormat.@id": "cwork:TextualFormat"
},
{
"@graph.cwork:primaryFormat.@id": "cwork:InteractiveFormat"
},
{
"@graph.cwork:primaryFormat.@id": "cwork:PictureGalleryFormat"
}
]
},
{
"$or": [
{
"@graph.@type": "cwork:NewsItem"
},
{
"@graph.@type": "cwork:BlogPost"
}
]
},
{
"@graph.@id" : {$in : ["$arg1"]}
},
{
"$or": [
{
"@graph.cwork:audience.@id": {
"$exists": false
}
},
{
"@graph.cwork:audience.@id": "{{{cwAudience}}}"
}
]
}
]
}
},
{
"$sort": {
"@graph.cwork:dateCreated.@date": -1
}
},
{
"$limit": {{{randomLimit}}}
}
]'''
    }
    bind (replace(str(?template), "\\$arg1", str(?ids)) as ?mongoQuery )
    {
        ?search a inst:spb100 ;
                :aggregate ?mongoQuery ;
                :entity ?entity .
        graph inst:spb100 {
            ?work ?p ?o.
            FILTER (?p NOT IN (cwork:tag, cwork:about, cwork:mention))
        }
    }
}
