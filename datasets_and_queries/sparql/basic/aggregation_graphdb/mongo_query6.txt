PREFIX inst: <http://www.ontotext.com/connectors/mongodb/instance#>
PREFIX : <http://www.ontotext.com/connectors/mongodb#>
PREFIX cwork: <http://www.bbc.co.uk/ontologies/creativework/>
PREFIX dbpedia:	<http://dbpedia.org/resource/>
PREFIX ldbcspb: <http://www.ldbcouncil.org/spb#>
PREFIX bbc: <http://www.bbc.co.uk/ontologies/bbc/>
PREFIX geo-ont: <http://www.geonames.org/ontology#>
PREFIX core: <http://www.bbc.co.uk/ontologies/coreconcepts/>
PREFIX ontogeo: <http://www.ontotext.com/owlim/geo#>
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#>
select distinct ?creativeWork ?locationName ?lat ?long ?dateModified where{
    {
select (group_concat(?creativeWork; separator = '", "') as ?ids) where{
select distinct ?creativeWork ?geonamesId{
  {
    SELECT (?referenceLat - ?deviation as ?minlat) (?referenceLong - ?deviation as ?minlong) (?referenceLat + ?deviation as ?maxlat) (?referenceLong + ?deviation as ?maxlong)
    {
      BIND({{{refLatitude}}} AS ?referenceLat) .
      BIND({{{refLongtitude}}} AS ?referenceLong) .
      BIND({{{refDeviation}}} AS ?deviation) .
    }
  }
  ?geonamesId ontogeo:within(?minlat ?minlong ?maxlat ?maxlong) .
 ?creativeWork cwork:tag ?geonamesId .

}
}
        }
         values ?template {
        '''{"@graph.0.@id" : {$in :["$arg1"]}}'''
        }
        bind (replace(str(?template), "\\$arg1", str(?ids)) as ?mongoQuery )

    {
     	 ?search a inst:spb100 ;
               :find ?mongoQuery ;
                    :entity ?entity .
            graph inst:spb100 {

          		 ?creativeWork cwork:dateModified ?dateModified


            }
        ?creativeWork cwork:tag ?geonamesId.
          ?geonamesId geo:lat ?lat .
  ?geonamesId geo:long ?long .
  ?geonamesId a geo-ont:Feature .
  ?geonamesId geo-ont:name ?locationName .

        }

    }